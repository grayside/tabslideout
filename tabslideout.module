<?php
// $Id$

/**
 * Implementation of hook_menu().
 */
function tabslideout_menu() {
  $items = array();
  $items['admin/settings/tabslideout'] = array(
    'title' => 'Tab Slide Out settings',
    'description' => 'Configure Tab Slide Out module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tabslideout_admin_settings'),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

/**
 * Page callback for admin/settings/tabslideout.
 */
function tabslideout_admin_settings() {
  $form = array();
  $form['tabslideout_enabled'] = array(
    '#title' => t('Enable tab'),
    '#description' => t('Activate the tab.'),
    '#type' => 'checkbox',
    '#default_value' => variable_get('tableslideout_enabled', TRUE),
  );
  $form = array_merge($form, _tabslideout_settings_form());
  if (module_exists('context')) {
    $form['tabslideout_enabled']['#description'] .= ' ' . t('This will override settings provided by context.');
  }
  return system_settings_form($form);
}

/**
 * Implementation of hook_init().
 */
function tabslideout_init() {
  if (variable_get('tabslideout_enabled', TRUE)) {
    $settings = array(
      'tabLocation' => variable_get('tabslideout_location', 'left'),
      'action' => variable_get('tabslideout_action', 'click'),
      'fixedPosition' => variable_get('tabslideout_position_fixed', FALSE),
    );
    if (in_array($settings['tabLocation'], array('left', 'right'))) {
      $settings['pathToTabImage'] = libraries_get_path('tabslideout') . '/images/contact_tab.gif';
    }
    else {
      $settings['pathToTabImage'] = libraries_get_path('tabslideout') . '/images/feedback_top_tab.gif';
    }
    _tabslideout_add_assets($settings);
  }
}

/**
 * Implementation of hook_footer().
 */
function tabslideout_footer($main = 0) {
  if (variable_get('tabslideout_enabled', TRUE)) {
    return theme('tabslideout_tab', _tabslideout_text_load(TRUE), _tabslideout_nojs_load());
  }
  else {
    // context reaction trigger here.
  }
}

/**
 * Implementation of hook_theme().
 */
function tabslideout_theme($existing, $type, $theme, $path) {
  return array(
    'tabslideout_tab' => array(
      'arguments' => array('text' => NULL, 'nojs' => NULL),
    ),
  );
}

/**
 * Definition of tabslideout_tab theme.
 */
function theme_tabslideout_tab($text = NULL, $nojs = NULL, $settings = array()) {
  return '<div class="tabslideout"><span class="handle">' . $nojs . '</span>' . $text . '</div></div>';
}

/**
 * Preprocessor for tabslideout_tab.
 */
function tabslideout_preprocess_tabslideout_tab(&$vars) {
  $settings = array();
  $settings['tabLocation'] = $vars['settings']['tabslideout_location'];
  $settings['action'] = $vars['settings']['tabslideout_action'];
  $settings['fixedPosition'] = $vars['settings']['tabslideout_position_fixed'];
  drupal_add_js(array('tabslideout' => $settings), 'setting');
  $vars['nojs'] = filter_xss($vars['nojs']);
}

/**
 * Helper to add library assets to page.
 */
function _tabslideout_add_assets($settings = array()) {
  drupal_add_js(libraries_get_path('tabslideout') . '/jquery.tabSlideOut.v1.3.js');
  drupal_add_css(drupal_get_path('module', 'tabslideout') . '/tabslideout.css');
  drupal_add_js(array('tabslideout' => $settings), 'setting');
  $script = "Drupal.behaviors.tabSlideOutBehavior = function(context) { $('.tabslideout').tabSlideOut({\n";
  foreach ($settings as $setting => $value) {
    $script .= "\t\"{$setting}\": Drupal.settings.tabslideout.{$setting},\n";
  }
  $script .= ");}";
  drupal_add_js($script, 'inline');
}

/**
 * Helper to grab tabslideout text and render as requested.
 *
 * @param $render
 *  (default: FALSE) If FALSE, return the variable as stored. If TRUE, render a text for use as output.
 */
function _tabslideout_text_load($render = FALSE) {
  $text = variable_get('tabslideout_text', array('body' => '', 'format' => FILTER_FORMAT_DEFAULT));
  if (!$render) {
    return $text;
  }
  return check_markup($text['body'], $text['format']);
}

/**
 * Helper to get the no js tab text.
 */
function _tabslideout_nojs_load() { 
  global $base_url;
  return variable_get('tabslideout_nojs', '<a href="' . $base_url . '">Content</a>');
}

/**
 * Helper to produce tabslideout settings configuration.
 *
 * These are the settings purely related to how javascript is configured
 * and the text that is output.
 */
function _tabslideout_settings_form() {
  $form = array();
  $form['tabslideout_location'] = array(
    '#title' => t('Tab location'),
    '#description' => t('Choose which edge of the page will display the tab.'),
    '#type' => 'select',
    '#options' => array(
      'left' => t('Left'),
      'right' => t('Right'),
      'top' => t('Top'),
      'bottom' => t('Bottom'),
    ),
    '#default_value' => variable_get('tabslideout_location', 'left'),
  );
  $form['tabslideout_action'] = array(
    '#title' => t('Triggering action'),
    '#description' => t('Choose how the tab is triggered to expand.'),
    '#type' => 'radios',
    '#options' => array(
      'click' => t('Click'),
      'hover' => t('Hover'),
    ),
    '#default_value' => variable_get('tabslideout_action', 'click'),
  );
  $form['tabslideout_position_fixed'] = array(
    '#title' => t('Fixed position'),
    '#description' => t('Make the tab sticky in position on the page.'),
    '#type' => 'checkbox',
    '#default_value' => variable_get('tabslideout_position_fixed', TRUE),
  );
  $form['tabslideout_nojs'] = array(
    '#title' => t('Accessible text'),
    '#description' => t('HTML to display if the browser is not using javascript'),
    '#type' => 'textfield',
    '#default_value' => _tabslideout_nojs_load(),
  );
  $form['tabslideout_text'] = array(
    '#title' => t('Display text'),
    '#description' => t('Text to display in the tab.'),
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#tree' => TRUE,
  );
  $tabslideout_text = _tabslideout_text_load();
  $form['tabslideout_text']['body'] = array(
    '#title' => t('Body'),
    '#type' => 'textarea',
    '#default_value' => $tabslideout_text['body'],
    '#rows' => 5,
  );
  $form['tabslideout_text']['format'] = filter_form($tabslideout_text['format']);
  return $form;
}